using HIMS.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace HIMS.DAL
{
    public class UnitOfWork : IDisposable
    {
        private NameDbContext context = new NameDbContext(); //DBContext class name

        //#region Repository Declaration
        private GenericRepository<Entity> entityRepository;
       

        public GenericRepository<Entity> EntityRepository
        {
            get
            {
                if (this.entityRepository == null)
                {
                    this.entityRepository = new GenericRepository<Entity>(context);
                }
                return entityRepository;
            }
        }

        
        //#endregion

        public int Save()
        {
            return context.SaveChanges();
        }

        private bool disposed = false;

        protected virtual void Dispose(bool disposing)
        {
            if (!this.disposed)
            {
                if (disposing)
                {
                    context.Dispose();
                }
            }
            this.disposed = true;
        }

        public void Dispose()
        {
            Dispose(true);
            GC.SuppressFinalize(this);
        }
    }
}